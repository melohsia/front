/**
 * 921. 使括号有效的最少添加
只有满足下面几点之一，括号字符串才是有效的：

它是一个空字符串，或者
它可以被写成 AB （A 与 B 连接）, 其中 A 和 B 都是有效字符串，或者
它可以被写作 (A)，其中 A 是有效字符串。
给定一个括号字符串 s ，移动N次，你就可以在字符串的任何位置插入一个括号。

例如，如果 s = "()))" ，你可以插入一个开始括号为 "(()))" 或结束括号为 "())))" 。
返回 为使结果字符串 s 有效而必须添加的最少括号数。

示例 1：
输入：s = "())"
输出：1

示例 2：
输入：s = "((("
输出：3

提示：
1 <= s.length <= 1000
s 只包含 '(' 和 ')' 字符。
 */

/**
 * @param {string} s
 * @return {number}
 */
var minAddToMakeValid = function(s) {
    let res = 0, //记录插入的次数
    need = 0 //对右括号的需求量
    for(let c of s){
        if(c === '('){
            need++;
        }else{
            need--;
            if(need === -1){
                res++;
                need = 0;
            }
        }
    }
    return res + need;
};


/**
 * 1541. 平衡括号字符串的最少插入次数
给你一个括号字符串 s ，它只包含字符 '(' 和 ')' 。一个括号字符串被称为平衡的当它满足：

任何左括号 '(' 必须对应两个连续的右括号 '))' 。
左括号 '(' 必须在对应的连续两个右括号 '))' 之前。
比方说 "())"， "())(())))" 和 "(())())))" 都是平衡的， ")()"， "()))" 和 "(()))" 都是不平衡的。
你可以在任意位置插入字符 '(' 和 ')' 使字符串平衡。
请你返回让 s 平衡的最少插入次数。

示例 1：
输入：s = "(()))"
输出：1
解释：第二个左括号有与之匹配的两个右括号，但是第一个左括号只有一个右括号。
我们需要在字符串结尾额外增加一个 ')' 使字符串变成平衡字符串 "(())))" 。

示例 2：
输入：s = "())"
输出：0
解释：字符串已经平衡了。

示例 3：
输入：s = "))())("
输出：3
解释：添加 '(' 去匹配最开头的 '))' ，然后添加 '))' 去匹配最后一个 '(' 。

示例 4：
输入：s = "(((((("
输出：12
解释：添加 12 个 ')' 得到平衡字符串。

示例 5：
输入：s = ")))))))"
输出：5
解释：在字符串开头添加 4 个 '(' 并在结尾添加 1 个 ')' ，字符串变成平衡字符串 "(((())))))))" 
 */
/**
 * @param {string} s
 * @return {number}
 */
var minInsertions = function(s) {
    let res = 0, //记录插入的次数
    need = 0 //记录右括号的需求量
    for(let c of s){
        if(c === '('){
            need += 2;
            if(need % 2 === 1){
                res++;
                need--;
            }
        }else{
            need--;
            if(need == -1){
                res++;
                need = 1;
            }
        }
    }
    return res + need;
};

console.log(minInsertions("()("))